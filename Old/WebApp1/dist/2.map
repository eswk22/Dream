{"version":3,"sources":["webpack:///./src/app/about/index.ts","webpack:///./src/app/about/about.component.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,8BAAc,4BAAmB,CAAC;;;;;;;;;;;;ACAlC,kCAA0B,sBAAe,CAAC;AAC1C,oCAA+B,0BAAiB,CAAC;AACjD;;;;IAIG;AAEH,QAAO,CAAC,GAAG,CAAC,yCAAyC,CAAC,CAAC;AAwBvD;KAEE,eAAmB,KAAqB;SAArB,UAAK,GAAL,KAAK,CAAgB;KAExC,CAAC;KAED,wBAAQ,GAAR;SAAA,iBAcC;SAbC,IAAI,CAAC,KAAK;cACP,IAAI;cACJ,SAAS,CAAC,UAAC,IAAS;aACnB,gCAAgC;aAChC,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC;SAClC,CAAC,CAAC,CAAC;SAEL,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;SACvC,8BAA8B;SAC9B,6DAA6D;SAC7D,qCAAqC;SACrC,gGAAgG;SAChG,+BAA+B;KACjC,CAAC;KACD,oCAAoB,GAApB;SACE,8DAA8D;SAC9D,4DAA4D;SAC5D,kDAAkD;SAClD,4FAA4F;SAC5F,qBAAqB;SACrB,EAAE;SACF,0DAA0D;SAC1D,oCAAoC;SACpC,2CAA2C;SAC3C,QAAQ;SACR,EAAE;SACF,MAAM;KACR,CAAC;KAxDH;SAAC,gBAAS,CAAC;aACT,QAAQ,EAAE,OAAO;aACjB,MAAM,EAAE,CAAC,gDAIR,CAAC;aACF,QAAQ,EAAE,0QAaT;UACF,CAAC;;cAAA;KAqCF,YAAC;;AAAD,EAAC;AApCY,cAAK,QAoCjB","file":"2.chunk.js","sourcesContent":["export * from './about.component';\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/about/index.ts\n **/","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n/*\n * We're loading this component asynchronously\n * We are using some magic with es6-promise-loader that will wrap the module with a Promise\n * see https://github.com/gdi2290/es6-promise-loader for more info\n */\n\nconsole.log('`About` component loaded asynchronously');\n\n@Component({\n  selector: 'about',\n  styles: [`\n    md-card{\n      margin: 25px;\n    }\n  `],\n  template: `\n  <md-card>\n    For hot module reloading run\n    <pre>npm run start:hmr</pre>\n  </md-card>\n  <md-card>\n    <h3>\n      patrick@AngularClass.com\n    </h3>\n  </md-card>\n  <md-card>\n    <pre>this.localState = {{ localState | json }}</pre>\n  </md-card>\n  `\n})\nexport class About {\n  localState;\n  constructor(public route: ActivatedRoute) {\n\n  }\n\n  ngOnInit() {\n    this.route\n      .data\n      .subscribe((data: any) => {\n        // your resolved data from route\n        this.localState = data.yourData;\n      });\n\n    console.log('hello `About` component');\n    // static data that is bundled\n    // var mockData = require('assets/mock-data/mock-data.json');\n    // console.log('mockData', mockData);\n    // if you're working with mock data you can also use http.get('assets/mock-data/mock-data.json')\n    // this.asyncDataWithWebpack();\n  }\n  asyncDataWithWebpack() {\n    // you can also async load mock data with 'es6-promise-loader'\n    // you would do this if you don't want the mock-data bundled\n    // remember that 'es6-promise-loader' is a promise\n    // var asyncMockDataPromiseFactory = require('es6-promise!assets/mock-data/mock-data.json');\n    // setTimeout(() => {\n    //\n    //   let asyncDataPromise = asyncMockDataPromiseFactory();\n    //   asyncDataPromise.then(json => {\n    //     console.log('async mockData', json);\n    //   });\n    //\n    // });\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/about/about.component.ts\n **/"],"sourceRoot":""}